############################ Apply Polar Transform to Aerial Images in CVACT Dataset #############################
S = 1200
height = 128
width = 512

i = np.arange(0, height)
j = np.arange(0, width)
jj, ii = np.meshgrid(j, i)

y = S/2. - S/2./height*(height-1-ii)*np.sin(2*np.pi*jj/width)
x = S/2. + S/2./height*(height-1-ii)*np.cos(2*np.pi*jj/width)


input_dir = '../Data/ANU_data_small/satview_polish/'
output_dir = '../Data/CVACT/polarmap/'

if not os.path.exists(output_dir):
    os.makedirs(output_dir)

images = os.listdir(input_dir)

for img in images:
    signal = imread(input_dir + img)
    image = sample_bilinear(signal, x, y)
    imsave(output_dir + img.replace('jpg','png'), image)


############################ Prepare Street View Images in CVACT to Accelerate Training Time #############################
import cv2
input_dir = '../Data/ANU_data_small/streetview/'
output_dir = '../Data/CVACT/streetview/'

if not os.path.exists(output_dir):
    os.makedirs(output_dir)

images = os.listdir(input_dir)

for img in images:
    signal = imread(input_dir + img)

    start = int(832 / 4)
    image = signal[start: start + int(832 / 2), :, :]
    image = cv2.resize(image, (512, 128), interpolation=cv2.INTER_AREA)
    imsave(output_dir + img.replace('.jpg', '.png'), image)